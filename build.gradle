plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

def mcVersion = stonecutter.current.version
def mcDep = project.supported_mc_versions.toString()

version = "${property('mod_version')}-${property('jarname_target')}"

base {
	archivesName = project.archives_base_name
}

loom {
	runConfigs.all {
		ideConfigGenerated true // Run configurations are not created for subprojects by default
		runDir "../../run" // Use a shared run folder and create separate worlds
	}
	configurations.all {
		resolutionStrategy {
			force("net.fabricmc:fabric-loader:$loader_version")
		}
	}
}

repositories {
	maven { url 'https://jitpack.io' }
}

fabricApi {
	configureDataGeneration {
		client = true
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Conditional Mixin
	modImplementation 'com.github.Fallen-Breath.conditional-mixin:conditional-mixin-fabric:0.6.4'
	include 'me.fallenbreath:conditional-mixin-fabric:0.6.4' // Bundle into mod jar
}

processResources {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE

	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version,
				'mcdep': project.property('supported_mc_versions'),
				'javadep': stonecutter.eval(mcVersion, ">=1.20.5") ? '>=21' : '>=17'
	}

	filesMatching("pmmsc.mixins.json5") {
		expand "refmap": "pmmsc-refmap.json"
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = stonecutter.eval(mcVersion, ">=1.20.5")
			? 21 : 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	def java = stonecutter.eval(mcVersion, ">=1.20.5")
			? JavaVersion.VERSION_21 : JavaVersion.VERSION_17
	sourceCompatibility = java
	targetCompatibility = java
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}